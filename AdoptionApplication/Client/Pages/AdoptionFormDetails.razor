@page "/animal/adoptionForm/{id}"
@inject NavigationManager NavigationManager
@inject IAdoptionFormService AdoptionFormService
@inject IToastService ToastService


<div class="text-center">
  <h1 class="display-4">Formularz adopcyjny</h1>
</div>

@if (Form == null)
{
    <p>Loading...</p>
}
else
{
<div class="card card-img-top p-4">
    <div class="row">
        <div class="col-md-4 mb-4">
            <div class="card">
                <img src="@Form.Animal.Image" alt="Animal Image" class="card-img-top">
            </div>
        </div>
        <div class="col-md-8">
            <form>
                <div class="form-group">
                    <label for="AnimalName">Animal Name:</label>
                    <input type="text" class="form-control" id="AnimalName" value="@Form.Animal.Name" readonly>
                </div>
                <div class="form-group">
                    <label for="FirstName">First Name:</label>
                    <input type="text" class="form-control" id="FirstName" value="@Form.FirstName" readonly>
                </div>
                <div class="form-group">
                    <label for="LastName">Last Name:</label>
                    <input type="text" class="form-control" id="LastName" value="@Form.LastName" readonly>
                </div>
                <div class="form-group">
                    <label for="Email">Email:</label>
                    <input type="email" class="form-control" id="Email" value="@Form.Email" readonly>
                </div>
                <div class="form-group">
                    <label for="PhoneNumber">Phone Number:</label>
                    <input type="tel" class="form-control" id="PhoneNumber" value="@Form.PhoneNumber" readonly>
                </div>
                <div class="form-group">
                    <label for="Age">Age:</label>
                    <input type="number" class="form-control" id="Age" value="@Form.Age" readonly>
                </div>
                <div class="form-group">
                    <label for="AboutMe">About Me:</label>
                    <textarea class="form-control" id="AboutMe" readonly>@Form.AboutMe</textarea>
                </div>
                <div class="form-group">
                    <label for="Status">Status:</label>
                    <select class="form-control" id="Status" @bind="@Form.Status">
                        <option value="@Form.Status" selected>@Form.Status</option>
                        @foreach (var status in AdoptionFormStatusConstants.All)
                        {
                            if (status != Form.Status)
                            {
                                <option value="@status">@status</option>
                            }
                        }
                    </select>
                </div>
            </form>
            <div class="d-flex justify-content-end">
                @if (StartingStatus != Form.Status)
                {
                    <button type="button" class="btn btn-primary mr-2" @onclick="UpdateStatus"><i class="fas fa-save"></i> Aktualizuj</button>
                }
                <a href="/" class="btn btn-secondary"><i class="fas fa-arrow-left"></i> Wyjdź</a>
            </div>
        </div>
    </div>
</div>

}

@code {
    public UserAdoptionForm? Form { get; set; } = new(){
        Id = 0, Status = AdoptionFormStatusConstants.New, AnimalId = 0, Animal = new Animal{Id = 0}};
    [Parameter]
    public string Id { get; set; }

    public string StartingStatus { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var form = await AdoptionFormService.GetForm(Int32.Parse(Id));
        StartingStatus = form.Status;
        Form = form;
    }
    
    private async Task UpdateStatus()
    {
        try
        {
            var result = await AdoptionFormService.ChangeStatus(Form);
            if (string.IsNullOrWhiteSpace(result?.ErrorMessage))
            {
                ToastService.ShowSuccess("Pomyślnie zaktualizowano formularz.");
                await Task.Delay(1000);
                NavigationManager.NavigateTo($"/animal/adoptionForm/{Id}");
            }
            else
            {
                ToastService.ShowError(result.ErrorMessage);
                await Task.Delay(1000);
                NavigationManager.NavigateTo($"/animal/adoptionForm/all");
            }
        }
        catch (Exception ex)
        {
            ToastService.ShowError(ex.Message);
            await Task.Delay(1000);
            NavigationManager.NavigateTo($"/animal/adoptionForm/all");
        }
    }

    private void Return() => NavigationManager.NavigateTo("/animal/adoptionForm/all");
}