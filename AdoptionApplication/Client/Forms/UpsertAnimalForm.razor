@page "/animal/create"
@page "/animal/update/{id}"
@using AdoptionApplication.Shared.DbModels
@inject ISpeciesService SpeciesService
@inject IAnimalService AnimalService
@inject IToastService ToastService

@if (_showErrorMessage)
{
    <div class="d-flex flex-column align-items-start">
        <div class="alert alert-danger mb-3 p-2 text-center">
            @NewAnimal.ErrorMessage
        </div>
        <button class="btn btn-primary align-self-start px-4" onclick="location.reload()">
            <span class="d-flex align-items-center justify-content-center h-100">Odśwież</span>
        </button>
    </div>
}
else if (_internalError)
{
    <div class="d-flex flex-column align-items-start">
        <div class="alert alert-danger mb-3 p-2 text-center">
            @ErrorMessagesConstants.InternalError
        </div>
        <button class="btn btn-primary align-self-start px-4" onclick="location.reload()">
            <span class="d-flex align-items-center justify-content-center h-100">Odśwież</span>
        </button>
    </div>
}
else if (_showSuccessMessage)
{
    
        @if(NewAnimal.Id > 0)
        {
            <div class="alert alert-success" role="alert">
            Nowe zwierzę do adopcji zostało dodane!
            </div>
        }
        else
        {
        <div class="alert alert-success" role="alert">
            Zaktualizowano informacje o @NewAnimal.Name
        </div>
        }
}
<div class="containe mx-auto">
    <div class="card mx-auto w-50">
        <div class="card-header">
            @if (string.IsNullOrWhiteSpace(@Id))
            {
                <h1 class="text-center display-4">Dodaj nowe zwierzę</h1>
            }
            else
            {
                <h1 class="text-center display-4">Aktualizuj informacje</h1>
            }
        </div>
        <div class="card-body">
            <form class="form" @onsubmit="AddAnimal">
                <div class="form-group">
                    <label for="name">Imię:</label>
                    <input type="text" class="form-control" id="name" @bind="@NewAnimal.Name" required>
                    @if (string.IsNullOrWhiteSpace(NewAnimal.Name))
                    {
                        <div class="invalid-feedback">
                            @ErrorMessagesConstants.EmptyField
                        </div>
                    }
                </div>
                <div class="form-group">
                    <label for="gender">Płeć:</label>
                    <select class="form-control" id="gender" @bind="@NewAnimal.Gender">
                        @foreach (var gender in AnimalService.Genders)
                        {
                            <option value="@gender">@gender</option>
                        }
                    </select>
                </div>
                <div class="form-group">
                    <label for="shortDescription">Krótki opis:</label>
                    <input type="text" class="form-control" id="shortDescription" @bind="@NewAnimal.ShortDescription">
                    @if (string.IsNullOrWhiteSpace(NewAnimal.ShortDescription))
                    {
                        <div class="invalid-feedback">
                            @ErrorMessagesConstants.EmptyField
                        </div>
                    }
                </div>
                <div class="form-group">
                    <label for="description">Opis:</label>
                    <textarea class="form-control" id="description" @bind="@NewAnimal.Description"></textarea>
                    @if (string.IsNullOrWhiteSpace(NewAnimal.Description))
                    {
                        <div class="invalid-feedback">
                            @ErrorMessagesConstants.EmptyField
                        </div>
                    }
                </div>
                <div class="form-group">
                    <label for="healthStatus">Stan zdrowia:</label>
                    <select class="form-control" id="healthStatus" @bind="@NewAnimal.HealthStatus">
                        @foreach (var status in AnimalService.HealthStatuses)
                        {
                            <option value="@status">@status</option>
                        }
                    </select>
                </div>
                <div class="form-group">
                    <label for="city">Miasto:</label>
                    <input type="text" class="form-control" id="city" @bind="@NewAnimal.City">
                    @if (string.IsNullOrWhiteSpace(NewAnimal.City))
                    {
                        <div class="invalid-feedback">
                            @ErrorMessagesConstants.EmptyField
                        </div>
                    }
                </div>
                <div class="form-group">
                    <label for="province">Województwo:</label>
                    <input type="text" class="form-control" id="province" @bind="@NewAnimal.Province">
                    @if (string.IsNullOrWhiteSpace(NewAnimal.Province))
                    {
                        <div class="invalid-feedback">
                            @ErrorMessagesConstants.EmptyField
                        </div>
                    }
                </div>
                <div class="form-group">
                    <label for="imageUrl">Url zdjęcia:</label>
                    <input type="text" class="form-control" id="imageUrl" @bind="@NewAnimal.Image" required>
                    <img src="@NewAnimal.Image" alt="Podgląd zdjęcia" style="max-width:300px; max-height:300px;" onerror="this.onerror=null;this.src='https://via.placeholder.com/200x200?text=Placeholder';">
                    @if (string.IsNullOrWhiteSpace(NewAnimal.Image))
                    {
                        <div class="invalid-feedback">
                            @ErrorMessagesConstants.EmptyField
                        </div>
                    }
                </div>
                <div class="form-group">
                    <label for="birthdate">Data urodzenia:</label>
                    <input type="date" class="form-control" id="birthdate" @bind="@NewAnimal.DateOfBirth" max="@DateTime.Today.ToString("yyyy-MM-dd")">
                </div>
                <div class="form-group">
                    <label for="birthdate">Data adopcji:</label>
                    <input type="date" class="form-control" id="birthdate" @bind="@NewAnimal.AdoptionDate" max="@DateTime.Today.ToString("yyyy-MM-dd")">
                    <div class="invalid-feedback">
                          @ErrorMessagesConstants.AdoptionDateInfo
                    </div>
                </div>
                <div class="form-group">
                    <label for="species">Gatunek:</label>
                    <select class="form-control" id="species" @bind="@NewAnimal.SpeciesId">
                        @foreach (var species in SpeciesService.Species)
                        {
                            <option value="@species.Id">@species.Name</option>
                        }
                    </select>
                    @if (NewAnimal.SpeciesId == 0)
                    {
                        <div class="invalid-feedback">
                            @ErrorMessagesConstants.EmptyField
                        </div>
                    }
                </div>
                <div>
                    <label>
                        <input type="radio" name="adoption-status" checked="@(!NewAnimal.IsAdopted)" @onchange="@(e => NewAnimal.IsAdopted = false)">
                        Do adopcji
                    </label>
                    <label>
                        <input type="radio" name="adoption-status" checked="@NewAnimal.IsAdopted" @onchange="@(e => NewAnimal.IsAdopted = true)">
                        Adoptowany
                    </label>
                </div>
                @if (NewAnimal.IsAdopted == null || NewAnimal.SpeciesId == 0 || string.IsNullOrWhiteSpace(NewAnimal.Image)
                     || string.IsNullOrWhiteSpace(NewAnimal.Province) || string.IsNullOrWhiteSpace(NewAnimal.City)
                     || NewAnimal.HealthStatus == null || string.IsNullOrWhiteSpace(NewAnimal.Description)
                     || string.IsNullOrWhiteSpace(NewAnimal.Name) || NewAnimal.Gender == null)
                {
                    _formValid = false;
                }
                else
                {
                    _formValid = true;
                }
                @if (string.IsNullOrWhiteSpace(@Id))
                {
                    <button type="submit" class="btn btn-lg btn-success" disabled="@(!_formValid)">
                        <i class="fas fa-plus mr-2"></i> Dodaj
                    </button>
                }
                else
                {
                    <button type="submit" class="btn btn-lg btn-success" disabled="@(!_formValid)">
                        <i class="fas fa-plus mr-2"></i> Aktualizuj
                    </button>
                }
            </form>
        </div>
    </div>
</div>


@code {
    public Animal? NewAnimal { get; set; } = new Animal();
    private bool _formValid = true;
    private bool _showErrorMessage = false;
    private bool _showSuccessMessage = false;
    private readonly bool _internalError = false;

    [Inject]
    public NavigationManager Navigation { get; set; }

    [Parameter]
    public string Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await SpeciesService.LoadSpecies();

        if(string.IsNullOrWhiteSpace(Id))
        {
            NewAnimal = new Animal
            {
                Gender = GenderContants.Undefined,
                HealthStatus = HealthStatusContants.Healthy,
                Description = "Opis: \nHistoria: \nOpieka: \nŻywienie:"
            };
        }
        else
        {
            NewAnimal = await AnimalService.GetAnimalAsync(Int32.Parse(Id));
        }
    }

    private async Task AddAnimal()
    {
        if (_formValid)
        {
            try
            {
                StateHasChanged();
                var result = await AnimalService.AddNewAnimal(NewAnimal);

                if (string.IsNullOrWhiteSpace(result?.ErrorMessage))
                {
                    _showErrorMessage = false;
                    _showSuccessMessage = true;
                    StateHasChanged();
                    await Task.Delay(2000);
                    ToastService.ShowSuccess("Operacja ukończona pomyślnie! Zmiany zostały wprowadzone");
                    Navigation.NavigateTo("/");
                }
                else if (!string.IsNullOrWhiteSpace(result.ErrorMessage))
                {
                    _showErrorMessage = true;
                    _showSuccessMessage = false;
                    StateHasChanged();
                    await Task.Delay(2000);
                    ToastService.ShowError(result.ErrorMessage);
                    Navigation.NavigateTo("/");
                }
            }
            catch (Exception ex)
            {
                ToastService.ShowError(ex.Message);
                await Task.Delay(2000);
                Navigation.NavigateTo("/");
            }
        }
    }
}
