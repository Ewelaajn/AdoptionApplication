@inject ISpeciesService SpeciesService
@inject IToastService ToastService
@using Blazored.Toast.Configuration
@using Blazored.Modal
@using Blazored.Modal.Services

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="#">AdoptionApplication</a>
        <button class="navbar-toggler" type="button" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <ul class="nav flex-column">
        <li class="nav-item">
            <a class="nav-link active" href="#">
                <span class="oi oi-home mr-2"></span> Home
            </a>
        </li>
        <li class="dropdown-divider"></li>
        @foreach (var species in SpeciesService.Species)
        {
            <li class="nav-item">
                <a class="nav-link" href="@species.Url">
                    <head>
                        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.3.0/css/all.min.css" />
                    </head>
                    <i class="@species.Icon mr-2"></i> @species.Name
                </a>
            </li>
        }
        <li class="nav-item">
            <a class="nav-link" @onclick="ShowModal" style="cursor: pointer;">
                <head>
                    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.3.0/css/all.min.css" />
                </head>
                <i class="fas fa-plus mr-2"></i> Dodaj nowy
            </a>
        </li>
    </ul>
</div>

@code {
    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;
    [CascadingParameter] public IModalService Modal { get; set; } = default!;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    protected override async Task OnInitializedAsync()
    {
        await SpeciesService.LoadSpecies();
    }

    private async Task ShowModal()
    {
        var moviesModal = Modal.Show<SpeciesForm>();
        var result = await moviesModal.Result;

        if(result.Data != null)
        {
            ToastService.ShowSuccess($"Dodano nowy gatunek {result.Data}");
        }
    }
}
